#!/usr/bin/env python
# -*- python -*-

from buildlib import *

##################################################################################
#  CMake targets
 
def clib(args):
     mkdir ("./build")

     if ("--release" in args or "--both" in args or not ("--debug" in args)):
         mkdir ("./build/.cmake-release")
         os.chdir ("build/.cmake-release")
         if (os.path.exists("../../build/.cmake-release")):
            print ("Changed directory to: " + os.getcwd())
            run("cmake", ["../../", "-DCMAKE_BUILD_TYPE:STRING=Release", "-DBUILD_BINARIES:BOOL=OFF"])
            run("make", [])
            os.chdir("../../")
         else:
            print ("Unable to change directories to:\n\t" + os.getcwd() + "/build/release")

     if ("--debug" in args or "--both" in args or not ("--release" in args)):
         mkdir ("./build/.cmake-debug")
         os.chdir ("build/.cmake-debug")
         if (os.path.exists("../../build/.cmake-debug")):
             print ("Changed directory to: " + os.getcwd())
             run("cmake", ["../../", "-DCMAKE_BUILD_TYPE:STRING=Debug", "-DBUILD_BINARIES:BOOL=OFF"])
             run("make", [])
             os.chdir("../../")
         else:
             print ("Unable to change directories to:\n\t" + os.getcwd() + "/build/release")
    

def cclean(args):
     rmdir ("build")

def ctest(args):
     mkdir ("./build")

     if ("--release" in args or "--both" in args or not ("--debug" in args)):
         mkdir ("./build/.cmake-release")
         os.chdir ("build/.cmake-release")
         if (os.path.exists("../../build/.cmake-release")):
             print ("Changed directory to: " + os.getcwd())
             run("cmake", ["../../", "-DCMAKE_BUILD_TYPE:STRING=Release", "-DBUILD_BINARIES:BOOL=ON"])
             run("make", [])
             os.chdir("../../")
         else:
             print ("Unable to change directories to:\n\t" + os.getcwd() + "/build/release")

     if ("--debug" in args or "--both" in args or not ("--release" in args)):
         mkdir ("./build/.cmake-debug")
         os.chdir ("build/.cmake-debug")
         if (os.path.exists("../../build/.cmake-debug")):
             print ("Changed directory to: " + os.getcwd())
             run("cmake", ["../../", "-DCMAKE_BUILD_TYPE:STRING=Debug", "-DBUILD_BINARIES:BOOL=ON"])
             run("make", [])
             os.chdir("../../")
         else:
             print ("Unable to change directories to:\n\t" + os.getcwd() + "/build/release")
    

def cfastlib(args):

     if ("--release" in args or "--both" in args or not ("--debug" in args)):
         os.chdir ("build/.cmake-release")
         if (os.path.exists("../../build/.cmake-release")):
             print ("Changed directory to: " + os.getcwd())
             run("make", [])
             os.chdir("../../")
         else:
             print ("Unable to change directories to:\n\t" + os.getcwd() + "/build/release")

     if ("--debug" in args or "--both" in args or not ("--release" in args)):
         os.chdir ("build/.cmake-debug")
         if (os.path.exists("../../build/.cmake-debug")):
             print ("Changed directory to: " + os.getcwd())
             run("make", [])
             os.chdir("../../")
         else:
             print ("Unable to change directories to:\n\t" + os.getcwd() + "/build/release")


##################################################################################
#  iCompile targets

def runicompile(dir):
     os.chdir(dir)
     run("../bin/icompile")
     run("../bin/icompile", ['-O'])
     os.chdir("..")

def ilib(args):
     runicompile('G3D.lib')
     runicompile('GLG3D.lib')

     if (os.uname()[0] == 'Darwin') or (os.uname()[0] == 'WinNT'):
         # Build jpeg
         runicompile('jpeg.lib')

def iclean(args):
     os.chdir("G3D.lib")
     run("../bin/icompile", ['--clean'])

     os.chdir("../GLG3D.lib")
     run("../bin/icompile", ['--clean'])

     os.chdir('../jpeg.lib')
     run("../bin/icompile", ['--clean'])

     os.chdir("../test.lib")
     run("../bin/icompile", ['--clean'])
     os.chdir("..")

def itest(args):
     os.chdir("test")
     run("../bin/icompile")
     os.chdir("..")

##################################################################################
#  General
        
def buildHelp():
    print """
build - Automated build system for graphics3D.

Syntax: 
    build target [install-dir]

TARGET         DESCRIPTION

help       Display this message

Targets using CMake:
clib       Build G3D, G3Dd, GLG3D, GLG3Dd and copy over headers
ctest      Build test and testd and then run both
cclean     Remove all files generated by CMake/make
fastlib    Builds link libraries without using CMake

Targets using iCompile:
ilib       Build G3D, G3Dd, GLG3D, GLG3Dd and copy over headers
itest      Build test and testd and then run both
iclean     Remove all files generated by iCompile

See cpp/readme.html for detailed build information.
"""

dispatchOnTarget(
  [clib, cclean, ctest, cfastlib,
   ilib, iclean, itest], buildHelp)

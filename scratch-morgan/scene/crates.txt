// You can extend this sample scene file format with your own fields.
// Edit the scene parsing in Scene.cpp.
{
    name = "Crates",
   
    models = {
    
       sibenikModel = ArticulatedModel::Specification {
           filename = "D:/morgan/data/3ds/fantasy/sibenik/sibenik.3DS",
           preprocess = ArticulatedModel::Preprocess {
               stripMaterials = true,
               program = (
                    // 0,1  ground
                    // 2    outside buildings
                    // 4    window rim
                    // 8    doors
                    // 10   window rim
                    // 13   windows
                    // 14   main (checker) floor
                    // 15   altar floor
                    // 16,17 walls
                    // When we remove part 2, something crashes G3D
                    merge(16, 17);
                    remove((0,1,2));
/*
                    setMaterial((16,17), Material::Specification {
                        lambertian = Color3(1,0,0)
                    });
                    setMaterial((4,10,5), Material::Specification {
                        lambertian = Color3(0,1,0)
                    });
                    setMaterial((14,15), Material::Specification {
                        lambertian = Color3(0,0,1)
                    });
                    */
                )
           }
         
       },
       
    },
    
    lighting = Lighting::Specification {
        ambientTop    = Color3::fromARGB(0x303842),
        ambientBottom = Color3::fromARGB(0x262627),

        lightArray = (
            GLight::directional(Vector3(-1,-0.5f,-1), Color3::fromARGB(0x1e324d))
        ),
        shadowedLightArray = (
        ),

        environmentMap = Texture::Specification {
            filename      = "cubemap/nooncloudspng/noonclouds_*.png",
            desiredFormat = "RGB8",
            dimension     = "DIM_CUBE_MAP",
            settings      = Texture::Settings::cubeMap(),
            preprocess    = Texture::Preprocess::gamma(2.1f)
        } 
    },
    
    entities = {
        // Each entity has a name and is an instance of a model.  The instantiation syntax accepts
        // two (optional) arguments: a position spline (which can be a single position), and a 
        // pose spline (which can be a single pose).
        
        c0 = sibenikModel(Vector3(1.0, 0.5, 0.0)),
        
    },
    
    camera = GCamera {
        coordinateFrame = CFrame::fromXYZYPRDegrees( -0.0f,   0.6f,   1.8f,  341.1f,  -0.0f,   0.0f),
        
        nearPlaneZ = -0.5,
        farPlaneZ = -50,
        fovDirection = "VERTICAL",
        fovDegrees = 60
    }
   
}


   /*
    models = {
        knightModel = MD2Model::Specification {
            filename = "pknight/tris.md2",
            material = "pknight/ctf_b.pcx",
            weaponFilename = "pknight/weapon.md2",
            weaponMaterial = "pknight/weapon.pcx",
        }       
    },
    */
    
    
// -*- c++ -*-
// You can extend this sample scene file format with your own fields.
// Edit the scene parsing in Scene.cpp.
{
    name = "Crates",
   
    models = {
       //ship = #include("3ds/spaceFighter01/spaceFighter01.am.any"),
       
       groundModel = #include("D:/morgan/G3D/data-files/3ds/postsparkasse/postsparkasse.am.any")
               
    },
    
    lighting = Lighting::Specification {
        ambientTop    = Color3::fromARGB(0x303842),
        ambientBottom = Color3::fromARGB(0x262627),

        lightArray = (
            GLight::directional(Vector3(-1,-0.5f,-1), Color3::fromARGB(0x1e324d))
        ),
        
        shadowedLightArray = (
            GLight::directional(Vector3(1, 2, 1), Color3::fromARGB(0xfcf6eb))
        ),

        environmentMap = Texture::Specification {
            filename      = "cubemap/nooncloudspng/noonclouds_*.png",
            desiredFormat = "RGB8",
            dimension     = "DIM_CUBE_MAP",
            settings      = Texture::Settings::cubeMap(),
            preprocess    = Texture::Preprocess::gamma(2.1f)
        } 
    },
    
    entities = {
        // Each entity has a name and is an instance of a model.  The instantiation syntax accepts
        // two (optional) arguments: a position spline (which can be a single position), and a 
        // pose spline (which can be a single pose).
        
        c0 = groundModel(Vector3(0,0,0))
       
    },
    
    camera = GCamera {
        coordinateFrame = CFrame::fromXYZYPRDegrees( -0.0f,   0.6f,   1.8f,  341.1f,  -0.0f,   0.0f),
        
        nearPlaneZ = -0.5,
        farPlaneZ = -50,
        fovDirection = "VERTICAL",
        fovDegrees = 60
    }
   
}
